{"version":3,"file":"static/js/58.0c6f6d12.chunk.js","mappings":"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","sources":["components/ProductItem/ProductItem.tsx","components/ProductItem/index.tsx","components/ProductsDisplay/index.tsx","components/ProductsDisplay/ProductDisplay.tsx","routers/Category/Category.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Skeleton } from \"antd\";\r\nimport { FullscreenOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { productType } from \"../../routers/Category/Category\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\n\r\ntype propsType = {\r\n  item: productType;\r\n  loading: boolean;\r\n  addToCartStore: (item: productType) => void;\r\n};\r\nexport default function ProductItem({\r\n  item,\r\n  addToCartStore,\r\n  loading,\r\n}: propsType) {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Skeleton active />\r\n      ) : (\r\n        <Card\r\n          cover={<img alt=\"example\" src={item.images[0]} />}\r\n          actions={[\r\n            <ShoppingCartOutlined\r\n              key=\"cart\"\r\n              onClick={() => addToCartStore(item)}\r\n            />,\r\n            <FullscreenOutlined\r\n              onClick={() => navigate(`/product/${item.id}`)}\r\n              key=\"detail\"\r\n            />,\r\n          ]}\r\n        >\r\n          <Meta\r\n            title={\r\n              <Link to={`/product/${item.id}`}>\r\n                <strong>{item.title}</strong>\r\n              </Link>\r\n            }\r\n          />\r\n          <Meta title={`${item.price}$`} />\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import ProductItem from \"./ProductItem\";\r\n\r\nexport default ProductItem;\r\n","import ProductDisplay from \"./ProductDisplay\";\r\n\r\nexport default ProductDisplay;\r\n","import { Col, message, Pagination, PaginationProps, Row } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { productType } from \"../../routers/Category/Category\";\r\nimport ProductItem from \"../ProductItem\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { addToCart } from \"../../store/Cart/Slices\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CATEGORY_PATH_NO_ID, HOME_PATH } from \"../../constants/path\";\r\n\r\ntype propsType = {\r\n  loading: boolean;\r\n  products: productType[];\r\n  currentPage: number;\r\n  total: number;\r\n  setCurrentPage: (page: number) => void;\r\n  isCategory?: string;\r\n};\r\n\r\nexport default function ProductDisplay({\r\n  products,\r\n  loading,\r\n  currentPage,\r\n  setCurrentPage,\r\n  total,\r\n  isCategory,\r\n}: propsType) {\r\n  const navigate = useNavigate();\r\n  // eslint-disable-next-line\r\n  const [pageParams, setPageParams] = useSearchParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangePage: PaginationProps[\"onChange\"] = (current, pageSize) => {\r\n    setCurrentPage(current);\r\n    if (isCategory) {\r\n      return navigate({\r\n        pathname: `${CATEGORY_PATH_NO_ID}/${isCategory}`,\r\n        search: `?page=${current}`,\r\n      });\r\n    }\r\n    navigate({\r\n      pathname: HOME_PATH,\r\n      search: `?page=${current}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let pageFromUrl = pageParams.get(\"page\");\r\n    let pageInt: number;\r\n    if (pageFromUrl) {\r\n      pageInt = parseInt(pageFromUrl);\r\n    } else {\r\n      pageInt = 1;\r\n    }\r\n    setCurrentPage(pageInt);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const addToCartStore = (item: productType) => {\r\n    message.success(\"Added to cart\");\r\n    dispatch(addToCart(item));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[16, 16]} className=\"min-height\">\r\n        {products.map((item) => {\r\n          return (\r\n            <Col\r\n              key={item.id}\r\n              className=\"gutter-row\"\r\n              lg={6}\r\n              md={8}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <ProductItem\r\n                addToCartStore={addToCartStore}\r\n                loading={loading}\r\n                item={item}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      <div className=\"horizontal-center pagination heading\">\r\n        <Pagination\r\n          showTotal={(total) => `Total ${total} products`}\r\n          defaultPageSize={10}\r\n          onChange={onChangePage}\r\n          current={currentPage}\r\n          total={total}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { categoryType } from \"../../layouts/MainLayout/MainLayout\";\r\nimport ProductDisplay from \"../../components/ProductsDisplay\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst { Title } = Typography;\r\n\r\nexport type productType = {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  description: string;\r\n  category: categoryType;\r\n  images: string[];\r\n};\r\n\r\nexport default function Category() {\r\n  const [products, setProducts] = useState<productType[]>([]);\r\n  const [total, setTotal] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const { id } = useParams();\r\n  const [category, setCategory] = useState<categoryType>({} as categoryType);\r\n\r\n  const getProductsByCategory = async (currentPage: number) => {\r\n    const perPage = 10;\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      `https://api.escuelajs.co/api/v1/categories/${id}/products?offset=${\r\n        (currentPage - 1) * perPage\r\n      }&limit=${perPage}`\r\n    );\r\n    const data = await res.json();\r\n    const res1 = await fetch(\r\n      `https://api.escuelajs.co/api/v1/categories/${id}/products`\r\n    );\r\n    const data1 = await res1.json();\r\n\r\n    setLoading(false);\r\n    setTotal(data1.length);\r\n    setProducts(data);\r\n  };\r\n\r\n  const getSingleCategory = async () => {\r\n    const res = await fetch(`https://api.escuelajs.co/api/v1/categories/${id}`);\r\n    const data = await res.json();\r\n    setCategory(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleCategory();\r\n    // eslint-disable-next-line\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    getProductsByCategory(currentPage);\r\n    // eslint-disable-next-line\r\n  }, [currentPage, id]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"horizontal-center heading\">\r\n        <Title>Category: {category && category.name}</Title>\r\n      </div>\r\n      <ProductDisplay\r\n        products={products}\r\n        loading={loading}\r\n        setCurrentPage={(current) => setCurrentPage(current)}\r\n        total={total}\r\n        currentPage={currentPage}\r\n        isCategory={id}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Meta","Card","item","addToCartStore","loading","navigate","useNavigate","active","cover","alt","src","images","actions","ShoppingCartOutlined","onClick","FullscreenOutlined","id","title","to","price","products","currentPage","setCurrentPage","total","isCategory","useSearchParams","pageParams","dispatch","useDispatch","useEffect","pageInt","pageFromUrl","get","parseInt","message","addToCart","gutter","className","map","lg","md","sm","xs","showTotal","defaultPageSize","onChange","current","pageSize","pathname","CATEGORY_PATH_NO_ID","search","HOME_PATH","Title","Typography","Category","useState","setProducts","setTotal","setLoading","useParams","category","setCategory","getProductsByCategory","fetch","res","json","data","res1","data1","length","getSingleCategory","name"],"sourceRoot":""}