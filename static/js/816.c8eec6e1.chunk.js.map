{"version":3,"file":"static/js/816.c8eec6e1.chunk.js","mappings":"iRAEA,MCYe,YAA6C,IAAxBA,EAAuB,EAAvBA,SAC5BC,GAAYC,EAAAA,EAAAA,KAChB,qBAAGC,UAAmDC,KAAtD,IAWF,OACE,UAAC,IAAD,CACEC,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAda,SAACC,GAChBZ,EAASY,EACV,EAaGC,eAXmB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,EACxB,EAUGG,aAAa,MAPf,WASE,SAAC,SAAD,CACEC,MAAM,WACNb,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4BAHrC,UAKE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEH,MAAM,gBACNb,KAAK,eACLc,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gDANf,UAUE,SAAC,IAAD,OAEF,SAAC,SAAD,CACEH,MAAM,eACNb,KAAK,cACLc,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,mCAEX,CACEC,QAAS,iCACTD,QAAS,8BAVf,UAcE,SAAC,IAAD,OAEF,SAAC,SAAD,CAAWb,WAAY,CAAED,KAAM,IAA/B,UACE,SAAC,IAAD,CACEgB,SAAUtB,GAAkC,IAArBA,EAAUuB,OACjCC,KAAK,UACLC,SAAS,SAHX,4BAUP,EC9EOC,EAAYC,EAAAA,EAAAA,QAEL,SAASC,IAKtB,OACE,iBAAKC,UAAU,mCAAf,WACE,gBAAKA,UAAU,mCAAf,UACE,yBACE,+CAGJ,UAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAKD,UAAU,WAAjC,WACE,UAAC,IAAD,CAAKE,GAAI,GAAIC,GAAI,GAAjB,WACE,0BACE,2BACE,SAACC,EAAA,EAAD,IADF,4BAIF,SAACC,EAAA,EAAD,QAEF,SAAC,IAAD,CAAKH,GAAI,GAAIC,GAAI,GAAjB,UACE,UAAC,IAAD,CAAMG,iBAAiB,IAAvB,WACE,SAACT,EAAD,CAASU,IAAI,oBAAb,UACE,SAAC,EAAD,CAAWrC,SAvBN,SAACY,GAChBG,QAAQC,IAAIJ,EACb,KAoB8C,MAGrC,SAACe,EAAD,CAASU,IAAI,iBAAb,kCAAkC,eAQ7C,C","sources":["components/FormOrder/index.tsx","components/FormOrder/FormOrder.tsx","routers/CheckOut/CheckOut.tsx"],"sourcesContent":["import FormOrder from \"./FormOrder\";\r\n\r\nexport default FormOrder;\r\n","import { Button, Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { cartType } from \"../../store/Cart/Slices\";\r\nexport type formValuesType = {\r\n  receiver: string;\r\n  formNumber: string;\r\n  receivePlace: string;\r\n};\r\n\r\ntype propsType = {\r\n  onSubmit: (formValues: formValuesType) => void;\r\n};\r\n\r\nexport default function FormOrder({ onSubmit }: propsType) {\r\n  const cartItems = useSelector(\r\n    ({ CartStore }: { CartStore: cartType }) => CartStore.items\r\n  );\r\n\r\n  const onFinish = (values: any) => {\r\n    onSubmit(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"basic\"\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n      initialValues={{ remember: true }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Receiver\"\r\n        name=\"receiver\"\r\n        rules={[{ required: true, message: \"Please input your name!\" }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Receive place\"\r\n        name=\"receivePlace\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your address to receiver items\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Phone number\"\r\n        name=\"phoneNumber\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your phone number!\",\r\n          },\r\n          {\r\n            pattern: /(84|0[3|5|7|8|9])+([0-9]{8})\\b/,\r\n            message: \"Please input phone number\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ span: 16 }}>\r\n        <Button\r\n          disabled={cartItems && cartItems.length === 0}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          Order now!\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n","import { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { Col, Row, Tabs } from \"antd\";\r\nimport React from \"react\";\r\nimport CartItemsDisplay from \"../../components/CartItemsDisplay\";\r\nimport FormOrder from \"../../components/FormOrder\";\r\nimport { formValuesType } from \"../../components/FormOrder/FormOrder\";\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function CheckOut() {\r\n  const onSubmit = (values: formValuesType) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container min-height-full-screen\">\r\n      <div className=\"horizontal-center title-checkout\">\r\n        <h1>\r\n          <strong>Check out</strong>\r\n        </h1>\r\n      </div>\r\n      <Row gutter={[32, 32]} className=\"checkout\">\r\n        <Col sm={13} xs={24}>\r\n          <div>\r\n            <h2>\r\n              <ShoppingCartOutlined /> Your shopping cart\r\n            </h2>\r\n          </div>\r\n          <CartItemsDisplay />\r\n        </Col>\r\n        <Col sm={11} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab=\"Pay when delivery\" key=\"1\">\r\n              <FormOrder onSubmit={onSubmit} />\r\n            </TabPane>\r\n            <TabPane tab=\"Online payment\" key=\"2\">\r\n              Content of Tab Pane 2\r\n            </TabPane>\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["onSubmit","cartItems","useSelector","CartStore","items","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","console","log","autoComplete","label","rules","required","message","pattern","disabled","length","type","htmlType","TabPane","Tabs","CheckOut","className","gutter","sm","xs","ShoppingCartOutlined","CartItemsDisplay","defaultActiveKey","tab"],"sourceRoot":""}