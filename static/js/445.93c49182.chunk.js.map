{"version":3,"file":"static/js/445.93c49182.chunk.js","mappings":"iWAkBQA,EAAqBC,EAAAA,EAAAA,MAAdC,EAAcD,EAAAA,EAAAA,UAEd,SAASE,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAsB,CAAC,GAArD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,UAAuB,CAAC,GAAxD,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA8BJ,EAAAA,EAAAA,WAAkB,GAAhD,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,yCAAG,WAAOZ,GAAP,qFACvBQ,GAAW,GADY,SAELK,MAAM,4CAAD,OAA6Cb,IAF7C,cAEjBc,EAFiB,gBAGJA,EAAIC,OAHA,OAGjBC,EAHiB,OAIvBZ,EAAWY,GACXV,EAAYU,EAAKX,UACjBG,GAAW,GANY,4CAAH,sDAQlBR,GAAMiB,SAASjB,IACjBY,EAAiBK,SAASjB,GAE7B,GAAE,CAACA,KAEF,iCACE,SAAC,IAAD,CAAKkB,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,SACGX,GACC,SAAC,UAAD,CAAgBY,QAAM,EAACC,MAAO,CAAEC,MAAO,WAEvC,UAAC,IAAD,YACE,SAAC,SAAD,oBACA,SAAC,SAAD,WACE,SAAC,KAAD,CAAMC,GAAE,oBAAejB,EAASL,IAAhC,SAAuCK,EAASkB,UAElD,SAAC,SAAD,UACGpB,EAAQqB,OAAS,yBAM5B,gBAAKN,UAAU,2BAAf,UACE,UAAC,IAAD,CAAKO,OAAQ,GAAb,WACE,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,UACE,SAAC,IAAD,UACGxB,EAAQyB,QACPzB,EAAQyB,OAAOC,KAAI,SAACC,GAClB,OACE,0BACE,SAAC,IAAD,CACEC,IAAI,SAEJC,IAAKF,KAJCA,EAQb,SAGP,SAAC,IAAD,CAAKJ,GAAI,GAAIC,GAAI,GAAjB,UACE,gBAAKT,UAAU,yDAAf,SACGX,GACC,SAAC,IAAD,CAAUY,QAAM,KAEhB,iCACE,SAACvB,EAAD,UAAQO,EAAQqB,SAChB,UAAC5B,EAAD,CAAOqC,MAAO,EAAd,UAAkB9B,EAAQ+B,MAA1B,SACA,SAACpC,EAAD,UAAYK,EAAQgC,eACpB,SAAC,IAAD,CAAQC,QAAS,kBAhETN,EAgE8B3B,EA/DpDkC,EAAAA,GAAAA,QAAgB,sBAChB5B,GAAS6B,EAAAA,EAAAA,IAAUR,IAFE,IAACA,CAgES,EAAjB,UACE,SAAC,IAAD,oBAUnB,C","sources":["routers/SingleProduct/SingleProduct.tsx"],"sourcesContent":["import {\r\n  Col,\r\n  Row,\r\n  Carousel,\r\n  Image,\r\n  Breadcrumb,\r\n  Skeleton,\r\n  Button,\r\n  Typography,\r\n  message,\r\n} from \"antd\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { productType } from \"../Category/Category\";\r\nimport { categoryType } from \"../../layouts/MainLayout/MainLayout\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToCart } from \"../../store/Cart/Slices\";\r\nconst { Title, Paragraph } = Typography;\r\n\r\nexport default function SingleProduct() {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState<productType>({} as productType);\r\n  const [category, setCategory] = useState<categoryType>({} as categoryType);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const addToCartStore = (item: productType) => {\r\n    message.success(\"Added to cart\");\r\n    dispatch(addToCart(item));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getSingleProduct = async (id: number) => {\r\n      setLoading(true);\r\n      const res = await fetch(`https://api.escuelajs.co/api/v1/products/${id}`);\r\n      const data = await res.json();\r\n      setProduct(data);\r\n      setCategory(data.category);\r\n      setLoading(false);\r\n    };\r\n    if (id && parseInt(id)) {\r\n      getSingleProduct(parseInt(id));\r\n    }\r\n  }, [id]);\r\n  return (\r\n    <>\r\n      <Row className=\"breadcumb heading\">\r\n        <div className=\"container\">\r\n          {loading ? (\r\n            <Skeleton.Input active style={{ width: \"100%\" }} />\r\n          ) : (\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>\r\n                <Link to={`/category/${category.id}`}>{category.name}</Link>\r\n              </Breadcrumb.Item>\r\n              <Breadcrumb.Item>\r\n                {product.title || \"Product name\"}\r\n              </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          )}\r\n        </div>\r\n      </Row>\r\n      <div className=\"container single-product\">\r\n        <Row gutter={32}>\r\n          <Col sm={12} xs={24}>\r\n            <Carousel>\r\n              {product.images &&\r\n                product.images.map((item) => {\r\n                  return (\r\n                    <div key={item}>\r\n                      <Image\r\n                        alt=\"Images\"\r\n                        // width={200}\r\n                        src={item}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Carousel>\r\n          </Col>\r\n          <Col sm={12} xs={24}>\r\n            <div className=\"flex-column-between-vertical height-100 product-detail\">\r\n              {loading ? (\r\n                <Skeleton active />\r\n              ) : (\r\n                <>\r\n                  <Title>{product.title}</Title>\r\n                  <Title level={3}>{product.price} $</Title>\r\n                  <Paragraph>{product.description}</Paragraph>\r\n                  <Button onClick={() => addToCartStore(product)}>\r\n                    <ShoppingCartOutlined />\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Title","Typography","Paragraph","SingleProduct","id","useParams","useState","product","setProduct","category","setCategory","loading","setLoading","dispatch","useDispatch","useEffect","getSingleProduct","fetch","res","json","data","parseInt","className","active","style","width","to","name","title","gutter","sm","xs","images","map","item","alt","src","level","price","description","onClick","message","addToCart"],"sourceRoot":""}